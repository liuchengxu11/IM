{"name": "test_get_user_dingDingUser[userId=--userId为空]", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <TestSuite.im_select_dept_role.test_select_dept_role.Test_case object at 0x7f9268667390>\ntest1 = 'userId=', test2 = '', case = 'userId为空'\n\n    @allure.epic(\"钉钉\")\n    @allure.feature(\"获取用户详情\")\n    @pytest.mark.parametrize(\"test1,test2,case\", Sheet().dingding_userid(row_id=2,column_id=3))\n    def test_get_user_dingDingUser(self, test1, test2, case):\n        \"\"\"\n        钉钉——获取用户详情\n        :return:\n        \"\"\"\n        print(test1)\n        print(test2)\n        print(case)\n        uri = \"/api/user/dingDingUser\"\n        allure.attach(\n            SX_IM_API +\n            uri,\n            \"地址\",\n            allure.attachment_type.TEXT)\n        headers = Login_Headers\n        allure.attach(json.dumps(\n            headers,\n            ensure_ascii=False,\n            indent=4), \"请求头\", allure.attachment_type.TEXT)\n        common = Common()\n        response = common.get(\n            uri,\n            params1=test1,\n            params2=test2,\n            headers=headers)\n        allure.attach(json.dumps(response.json(), ensure_ascii=False,\n                                 indent=4), \"响应\", allure.attachment_type.TEXT)\n        code = int(response.status_code)\n        code1 = int(json.loads(response.text)[\"code\"])\n        code2 = json.loads(response.text)[\"desc\"]\n>       assert case == json.loads(response.text)[\"data\"]['userName']\nE       TypeError: 'NoneType' object is not subscriptable\n\nTestSuite/im_select_dept_role/test_select_dept_role.py:82: TypeError"}, "description": "\n        钉钉——获取用户详情\n        :return:\n        ", "attachments": [{"name": "地址", "source": "825d54bf-744d-4e5f-8999-023135021854-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "5157def2-5025-46f9-be0e-0d5ff2ed9d56-attachment.txt", "type": "text/plain"}, {"name": "响应", "source": "0b8b0de7-6d74-4dfd-b30e-a21d55e3b64a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test1", "value": "'userId='"}, {"name": "test2", "value": "''"}, {"name": "case", "value": "'userId为空'"}], "start": 1586490836858, "stop": 1586490837080, "uuid": "e5cc688d-8a35-4208-8254-902a1e48aff8", "historyId": "971f204734175cc66f630cfd0ffe27b5", "fullName": "TestSuite.im_select_dept_role.test_select_dept_role.Test_case#test_get_user_dingDingUser[userId=--userId为空]", "labels": [{"name": "epic", "value": "钉钉"}, {"name": "feature", "value": "获取用户详情"}, {"name": "parentSuite", "value": "TestSuite.im_select_dept_role"}, {"name": "suite", "value": "test_select_dept_role"}, {"name": "subSuite", "value": "Test_case"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "12917-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite.im_select_dept_role.test_select_dept_role"}]}