{"name": "test_post_user_dingDingRoleStaffList[roleId=-7953655070]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <TestSuite.im_select_dept_role.test_select_dept_role.Test_case object at 0x7fc40830a550>\ntest1 = 'roleId=', test2 = '795365507'\n\n    @allure.epic(\"钉钉\")\n    @allure.feature(\"获取角色下员工列表\")\n    @pytest.mark.parametrize(\"test1,test2\", DingDing_roleId)\n    def test_post_user_dingDingRoleStaffList(self, test1, test2):\n        \"\"\"\n        钉钉-获取角色下员工列表\n        \"\"\"\n        uri = \"/api/user/dingDingRoleStaffList\"\n        allure.attach(SX_IM_API + uri, \"地址\", allure.attachment_type.TEXT)\n        headers = Login_Headers\n        allure.attach(json.dumps(\n            headers,\n            ensure_ascii=False,\n            indent=4), \"请求头\", allure.attachment_type.TEXT)\n        common = Common()\n        response = common.post(\n            uri,\n            params1=test1,\n            params2=test2,\n            headers=headers)\n>       allure.attach(json.dumps(response.json(), ensure_ascii=False,\n                                 indent=4), \"响应\", allure.attachment_type.TEXT)\n\nTestSuite/im_select_dept_role/test_select_dept_role.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/requests/models.py:892: in json\n    return complexjson.loads(self.text, **kwargs)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py:348: in loads\n    return _default_decoder.decode(s)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fc3b809e550>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:355: JSONDecodeError"}, "description": "\n        钉钉-获取角色下员工列表\n        ", "attachments": [{"name": "地址", "source": "a4168655-566b-4106-84b8-4a874603dac3-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "27a1d72c-d149-491d-88de-2aeaf5acb684-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test1", "value": "'roleId='"}, {"name": "test2", "value": "'795365507'"}], "start": 1584417364319, "stop": 1584417364338, "uuid": "4878e717-3522-496f-9c83-baec7bf3b82a", "historyId": "d3845d3b21bbf743d770400c3132f82c", "fullName": "TestSuite.im_select_dept_role.test_select_dept_role.Test_case#test_post_user_dingDingRoleStaffList[roleId=-7953655070]", "labels": [{"name": "feature", "value": "获取角色下员工列表"}, {"name": "epic", "value": "钉钉"}, {"name": "parentSuite", "value": "TestSuite.im_select_dept_role"}, {"name": "suite", "value": "test_select_dept_role"}, {"name": "subSuite", "value": "Test_case"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "45317-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestSuite.im_select_dept_role.test_select_dept_role"}]}